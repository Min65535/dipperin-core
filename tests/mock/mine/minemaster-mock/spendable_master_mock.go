// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dipperin/dipperin-core/core/mine/minemaster (interfaces: SpendableMaster)

// Package minemaster_mock is a generated GoMock package.
package minemaster_mock

import (
	common "github.com/dipperin/dipperin-core/common"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSpendableMaster is a mock of SpendableMaster interface
type MockSpendableMaster struct {
	ctrl     *gomock.Controller
	recorder *MockSpendableMasterMockRecorder
}

// MockSpendableMasterMockRecorder is the mock recorder for MockSpendableMaster
type MockSpendableMasterMockRecorder struct {
	mock *MockSpendableMaster
}

// NewMockSpendableMaster creates a new mock instance
func NewMockSpendableMaster(ctrl *gomock.Controller) *MockSpendableMaster {
	mock := &MockSpendableMaster{ctrl: ctrl}
	mock.recorder = &MockSpendableMasterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSpendableMaster) EXPECT() *MockSpendableMasterMockRecorder {
	return m.recorder
}

// RetrieveReward mocks base method
func (m *MockSpendableMaster) RetrieveReward(arg0 common.Address) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RetrieveReward", arg0)
}

// RetrieveReward indicates an expected call of RetrieveReward
func (mr *MockSpendableMasterMockRecorder) RetrieveReward(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveReward", reflect.TypeOf((*MockSpendableMaster)(nil).RetrieveReward), arg0)
}
